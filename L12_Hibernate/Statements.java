package L12_Hibernate;

public class Statements {
    // ============================== Statement, PreparedStatement и CallableStatement ============================== \\

    // 1. Statement:
    //   - Используется для выполнения простых SQL-запросов без параметров в рамках определенной JDBC-сессии.
    //   - Выполняется методом execute для обычного выражения, executeUpdate для модифицирующего, executeBatch для пакетного.
    //   - Подходит, когда запрос выполняется только один раз.
    //   - Уязвим для SQL-инъекций, если параметры передаются напрямую в запрос.
    //
    // После выполнения, экземпляр Statement владеет ResultSet-ом, и другими данными о результате выполнения,
    // такими как количество обновленных записей и сгенерированные ключи.
    //
    // 2. PreparedStatement:
    //   - Используется для выполнения SQL-запросов с параметрами.
    //   - Подходит, когда запрос выполняется несколько раз с разными параметрами.
    //   - Обеспечивает защиту от SQL-инъекций, так как параметры передаются отдельно от запроса.
    //   - Повышает производительность при многократном выполнении запроса.
    //
    // 3. CallableStatement:
    //   - Используется для вызова хранимых процедур в базе данных.
    //   - Позволяет передавать параметры и получать результаты из хранимых процедур.
    //   - Обеспечивает структурированный и безопасный способ выполнения сложных операций в базе данных.
    //
    // Хранимые процедуры - это предварительно скомпилированные программы, хранящиеся в базе данных,
    // которые могут принимать параметры и возвращать результаты.
    //
    // Общие рекомендации:
    //   - Если запрос простой и выполняется только один раз, используйте Statement.
    //   - Если запрос содержит параметры и выполняется несколько раз, используйте PreparedStatement.
    //   - Если нужно вызвать хранимую процедуру, используйте CallableStatement.
    //
    // Экземпляры всех трех типов создаются методами интерфейса Connection.

}
