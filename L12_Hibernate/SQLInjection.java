package L12_Hibernate;

public class SQLInjection {
    // ================================================= SQL инъекция =============================================== \\

    // SQL-инъекция - это вид атаки, при которой злоумышленник может внедрить или "инъецировать" вредоносный SQL-код в
    // запрос, изменяя его предполагаемую функцию. Это может привести к несанкционированному доступу к данным,
    // их изменению или удалению
    //

    // Как не допустить:
    //
    // 1. Подготовленные запросы (PreparedStatement): Подготовленные запросы разделяют SQL-код от входных данных,
    //    что делает инъекцию невозможной. Вместо встраивания пользовательского ввода непосредственно в запрос,
    //    используются плейсхолдеры, а значения передаются отдельно.
    //
    //   String query = "SELECT  FROM users WHERE username = ? AND password = ?";
    //   PreparedStatement ps = connection.prepareStatement(query);
    //   ps.setString(1, username);
    //   ps.setString(2, password);
    //   ResultSet rs = ps.executeQuery();
    //
    // 2. Использование ORM (Object-Relational Mapping) фреймворков: Фреймворки, такие как Hibernate, JPA
    //    (Java Persistence API), обеспечивают дополнительный уровень абстракции при работе с базой данных,
    //    автоматически используя подготовленные запросы и предотвращая SQL-инъекции.
    //
    // 3. Валидация и санитизация ввода: Всегда проверяйте и очищайте пользовательский ввод, особенно если он
    //    используется в SQL-запросах. Используйте регулярные выражения или специальные библиотеки для валидации
    //    ввода на соответствие ожидаемому формату.
    //
    // 4. Ограничение прав доступа: Настройте базу данных так, чтобы учетная запись, используемая приложением
    //    для доступа к БД, имела минимально необходимые права. Например, если приложению не нужно удалять данные,
    //    учетная запись не должна иметь прав на выполнение операций DELETE.
    //
    // 5. Использование веб-файрвола приложений (WAF): Веб-файрволы приложений могут обнаруживать и блокировать запросы,
    //    содержащие вредоносный SQL-код, до того, как они достигнут вашего приложения.


    // Файервол - это система безопасности, которая контролирует и фильтрует входящий и исходящий сетевой трафик на
    // основе заранее установленных правил безопасности. Файервол может быть реализован как в аппаратной, так и в
    // программной форме, или как комбинация обоих вариантов. Его основная задача - защитить сеть или
    // отдельный компьютер от неавторизованного доступа, атак и других угроз из внешней сети, таких как интернет.
}
