package L5_Logging;

// import org.apache.logging.log4j.LogManager;
// import org.apache.logging.log4j.Logger;

public class Log4j {
    // ==================================================== Log4j =================================================== \\

    // Log4j - библиотека логгирования. Основные компоненты:
    //
    // Logger:
    //   - Основной компонент, используемый для логирования сообщений.
    //   - Иерархически организованы, что позволяет наследовать настройки логирования.
    //   - Уровни логирования (TRACE, DEBUG, INFO, WARN, ERROR, FATAL) помогают контролировать детализацию логов.
    //
    // Appender:
    //   - Отвечает за направление логов в различные места назначения: файлы, консоль, базы данных и т.д.
    //   - Можно настроить несколько Appender'ов для одного Logger, чтобы логи одновременно записывались в разные места
    //
    // Layout:
    //   - Определяет формат вывода логов.
    //   - Включает в себя простые форматы, такие как PatternLayout
    //     (позволяет настраивать структуру сообщений с помощью шаблонов), HTMLLayout, XMLLayout и другие
    //
    // Filter:
    //   - Предоставляет возможность фильтрации логов на основе различных критериев,
    //     таких как уровень логирования, сообщение, класс исключения и т.д.
    //   - Может быть применен как к Logger'ам, так и к Appender'ам для более тонкой настройки логирования.
    //
    // Configuration:
    //   - Log4j предоставляет гибкие возможности для конфигурации через XML, JSON, YAML или properties-файлы.
    //   - Конфигурация позволяет определить, какие Logger'ы и Appender'ы будут использоваться, а также их настройки.


    // private static final Logger LOGGER = LogManager.getLogger(MyApp.class);

    // public static void main(String[] args) {
    //     LOGGER.debug("Это сообщение отладки");
    //     LOGGER.info("Начало работы программы");
    //     try {
    //         // Код, который может вызвать ошибку
    //     } catch (Exception e) {
    //         LOGGER.error("Произошла ошибка: ", e);
    //     }
    //     LOGGER.info("Завершение работы программы");
    // }
}

