package L7_InputOutput;

public class SymbolLink {
    // ========================================= Символьная ссылка (симлинк) ======================================== \\

    // Символьная ссылка (или симлинк) - это тип файла, который является ссылкой на другой файл или директорию.
    // Можно управлять символьными ссылками с помощью API, предоставляемого пакетом java.nio.file.
    //
    // 1. Создание символьной ссылки:
    //   - Используйте Files.createSymbolicLink(Path link, Path target, FileAttribute<?>... attrs) из
    //   java.nio.file.Files для создания символьной ссылки. link - путь, где будет создана ссылка, target - цель ссылки
    //
    // 2. Чтение символьной ссылки:
    //   - Чтобы прочитать, куда указывает символьная ссылка, используйте Files.readSymbolicLink(Path link),
    //   который возвращает путь к цели ссылки.
    //
    // 3. Проверка на символьную ссылку:
    //   - Для проверки, является ли файл символьной ссылкой, используйте Files.isSymbolicLink(Path path).
    //
    // 4. Работа с атрибутами:
    //   - Атрибуты файла, включая проверку на символьную ссылку, могут быть получены через
    //   Files.readAttributes(Path path, Class<A> type, LinkOption... options).
    //
    // 5. Обработка символьных ссылок при обходе файловой системы:
    //   - При использовании методов обхода, таких как Files.walk(Path start, FileVisitOption... options),
    //   важно учитывать, что символьные ссылки могут привести к циклам.
    //   FileVisitOption.FOLLOW_LINKS позволяет следовать по символьным ссылкам.
}
