package L10_Collections.P1_List;

public class P1_ArrayList {
    public static void main(String[] args) {
        // =============================================== ArrayList ================================================ \\

        // - Основное использование: ArrayList является реализацией динамического массива, что означает, что размер
        //   списка может изменяться динамически. Используется, когда требуется доступ к элементам по индексу.
        //
        // - Особенности: Обеспечивает быстрый произвольный доступ к элементам, так как они хранятся в массиве.
        //   Вставка и удаление могут быть медленными: нужно сдвигать элементы для поддержания порядка списка.
        //
        // - Производительность: Быстрый доступ по индексу O(1), медленная вставка и удаление в середине списка O(n)

        // ArrayList создается с начальной емкостью capacity 10 ячеек
        // Переменная size хранит количество добавленных элементов и изначально равна 0.
        // Это не емкость внутреннего массива – емкость массива недоступна.

        // Если добавить в ArrayList больше элементов, чем его capacity – неявно для пользователя произойдет
        // вызов метода grow() и пересоздание внутреннего массива.
        //
        // Алгоритм расширения внутреннего массива:
        // - Создается новый массив по формуле (capacity * 3) / 2 + 1
        // - Все элементы старого массива копируются в новый методом System.arraycopy()
        // - Новый массив присваивается внутренней переменной elementData
        // - Старый массив объявляется мусором – на него больше нет ссылки.
        //
        // Чтобы обрезать емкость списка до реального количества элементов в нем
        // используем метод trimToSize(). Этот метод есть только у ArrayList и отсутствует у List.

        java.util.ArrayList<String> arrayList = new java.util.ArrayList<String>();
        arrayList.add("Volvo");
        arrayList.add("BMW");
        arrayList.remove("BMW");
        System.out.println(arrayList);
    }
}
