package L2_OOP.a_OOP;

public class b_Inheritance {
    // ================================================ Наследование ================================================ \\

    // Наследование - порождение одного класса от другого с сохранением всех свойств и методов класса-родителя,
    //                добавляя новые свойства и методы. Множественное наследование запрещено
    //
    // Повторное использование: наследование позволяет новому классу перенимать свойства и методы существующего класса.
    //
    // Расширение функциональности: можно добавлять новые функции к существующим классам, не изменяя их.
    //
    // Иерархическая классификация: помогает организовать и структурировать код, отражая иерархические отношения
    // между различными объектами и классами, что упрощает понимание и управление кодом.
    //
    // Если наследоваться от final: "java: cannot inherit from final OOP.a_OOP.Animal"
}

// Базовый класс
class Animal {
    // Поле базового класса
    String name;

    // Метод базового класса
    public void eat() {
        System.out.println(name + " ест");
    }
}

// Подкласс, наследующий класс Animal
class Dog extends Animal {
    // Конструктор подкласса
    Dog(String name) {
        this.name = name; // Инициализация поля базового класса в подклассе
    }

    // Метод подкласса
    public void bark() {
        System.out.println(name + " лает");
    }
}

class Main_b_Inheritance {
    public static void main(String[] args) {
        // Создание объекта подкласса
        Dog myDog = new Dog("Рекс");
        myDog.eat(); // Вызов метода базового класса. Рекс ест
        myDog.bark(); // Вызов метода подкласса. Рекс лает
    }
}